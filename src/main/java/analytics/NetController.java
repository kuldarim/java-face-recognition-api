package analytics;

import config.CONFIG;
import image.FileService;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.highgui.Highgui;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;

@RestController
public class NetController {

  @Autowired
  FileService fileService;

  @RequestMapping("/analytics/precision/{netName}")
  public String far(@PathVariable(value="netName") String netName) {
    switch (netName) {
      case "1": {
        this.calculatePrecision("netSquare-self-distance.txt", "netSquare-others-distance.txt");
        break;
      }
      case "2": {
        this.calculatePrecision("net-self-distance.txt", "net-others-distance.txt");
        break;
      }
      case "3": {
        this.calculatePrecision("netFeature-self-distance.txt", "netFeature-others-distance.txt");
      }
    }

    return "yey";
  }

  @RequestMapping("/analytics/store-distances/{netName}")
  public String storeDistances(@PathVariable(value="netName") String netName) {

    switch (netName) {
      case "1": {
        this.storeDistance("netSquare");
        break;
      }
      case "2": {
        this.storeDistance("net");
        break;
      }
      case "3": {
        this.storeDistance("netFeature");
      }
    }

    return "ney";
  }

  @RequestMapping("/analytics/apply/{netName}")
  public String applyNet(@PathVariable(value="netName") String netName) {

    ArrayList<String> netGenetic = this.fileService.readNetFromFile();
    ArrayList<String> netSquare = new ArrayList<>();
    netSquare.add("320-225");
    netSquare.add("320-226");
    netSquare.add("320-227");
    netSquare.add("320-228");
    netSquare.add("320-229");
    netSquare.add("320-230");
    netSquare.add("320-231");
    netSquare.add("320-232");
    netSquare.add("320-233");
    netSquare.add("320-234");
    netSquare.add("320-235");
    netSquare.add("320-236");
    netSquare.add("320-237");
    netSquare.add("320-238");
    netSquare.add("320-239");
    netSquare.add("320-240");
    netSquare.add("320-241");
    netSquare.add("320-242");
    netSquare.add("320-243");
    netSquare.add("320-244");
    netSquare.add("320-245");
    netSquare.add("320-246");
    netSquare.add("320-247");
    netSquare.add("320-248");
    netSquare.add("320-249");
    netSquare.add("320-250");
    netSquare.add("320-251");
    netSquare.add("320-252");
    netSquare.add("320-253");
    netSquare.add("320-254");
    netSquare.add("320-255");
    netSquare.add("320-256");
    netSquare.add("320-257");
    netSquare.add("320-258");
    netSquare.add("320-259");
    netSquare.add("320-260");
    netSquare.add("320-261");
    netSquare.add("320-262");
    netSquare.add("320-263");
    netSquare.add("320-264");
    ArrayList<String> netFeature = new ArrayList<>();
    netFeature.add("193-177");
    netFeature.add("192-176");
    netFeature.add("191-175");
    netFeature.add("190-174");
    netFeature.add("194-173");
    netFeature.add("195-172");
    netFeature.add("196-171");
    netFeature.add("197-170");
    netFeature.add("198-177");
    netFeature.add("199-178");
    netFeature.add("200-179");
    netFeature.add("199-170");
    netFeature.add("411-171");
    netFeature.add("412-172");
    netFeature.add("413-173");
    netFeature.add("414-174");
    netFeature.add("415-175");
    netFeature.add("416-176");
    netFeature.add("417-177");
    netFeature.add("418-178");
    netFeature.add("419-179");
    netFeature.add("411-177");
    netFeature.add("412-177");
    netFeature.add("413-177");
    netFeature.add("414-177");
    netFeature.add("415-177");
    netFeature.add("416-177");
    netFeature.add("261-348");
    netFeature.add("262-348");
    netFeature.add("263-348");
    netFeature.add("264-348");
    netFeature.add("265-348");
    netFeature.add("266-348");
    netFeature.add("267-348");
    netFeature.add("268-348");
    netFeature.add("269-348");
    netFeature.add("270-348");
    netFeature.add("271-348");
    netFeature.add("272-348");
    netFeature.add("273-348");

    switch (netName) {
      case "1": {
        this.storeNet(netSquare, "netSquare");
        break;
      }
      case "2": {
        this.storeNet(netGenetic, "net");
        break;
      }
      case "3": {
        this.storeNet(netFeature, "netFeature");
      }
    }

    return "yey";
  }

  //Population size
  // mutateProbability: 0.5
  // crossoverProbability: 0.3
  //10 ["638-56","637-145","633-70","632-219","628-426","620-56","618-351","615-189","612-145","584-181","574-458","569-176","564-345","533-111","511-170","500-322","482-136","479-180","46-126","458-300","458-107","437-7","415-434","41-214","401-450","390-344","362-287","348-347","329-428","297-292","265-256","262-170","259-504","25-154","230-230","214-489","208-440","168-423","151-9","138-56"]
  // 20 ["331-456","353-183","361-496","367-272","37-287","371-376","382-191","387-436","391-426","392-438","404-223","423-369","428-5","446-444","454-191","458-265","467-489","470-278","483-421","484-178","485-420","493-260","495-265","503-433","512-377","518-345","521-265","521-432","524-487","525-43","529-550","542-208","542-6","543-76","550-95","562-144","562-477","572-124","572-46","574-167"]
  // 30 ["318-221","384-467","388-525","526-472","546-301","546-511","550-433","555-175","568-545","57-311","581-466","582-91","587-428","593-131","609-340","618-400","618-547","618-586","649-462","651-352","67-367","675-529","677-80","692-100","694-137","705-213","706-476","720-459","731-497","740-180","744-317","747-117","751-287","76-446","765-210","768-578","769-154","773-535","780-367","795-230"]
  // 40 ["1-201","128-544","131-332","187-560","189-258","192-435","2-148","210-515","215-156","219-193","219-207","227-295","261-568","300-276","330-263","337-144","340-78","353-72","359-391","369-560","371-555","371-595","388-28","399-534","41-240","411-35","419-96","420-436","427-21","427-445","434-258","438-236","446-526","450-592","453-254","454-49","456-245","456-254","460-417","463-302"]
  // 50 ["103-542","175-482","2-307","241-512","387-423","392-409","393-524","394-423","395-425","395-581","399-275","401-476","405-262","411-360","419-524","42-199","420-269","424-522","424-545","430-155","433-211","438-373","44-457","450-401","451-23","451-274","453-449","454-399","454-57","455-114","459-114","463-582","469-320","469-521","470-388","472-375","474-290","48-534","484-159","484-65"]

  //Mutation
  // populiation 50
  // crossover 0.3
  // 0.1 ["373-249","373-460","375-277","379-263","381-106","382-57","384-532","386-435","386-499","401-263","413-414","432-327","468-344","471-595","48-107","521-183","534-175","539-503","560-427","560-60","578-515","592-306","6-86","642-255","659-309","669-67","671-65","682-181","684-590","69-344","696-353","697-476","737-265","742-544","744-591","746-589","764-551","772-307","775-365","790-595"]
  // 0.2 ["531-50","517-200","513-548","512-307","507-99","505-227","497-463","494-583","490-163","488-512","486-242","482-163","481-540","478-585","472-210","470-221","469-93","467-305","46-17","446-546","445-304","426-108","400-441","394-576","39-332","387-263","381-435","381-356","38-7","366-426","365-588","363-542","355-553","353-228","346-438","339-458","336-427","328-301","313-455","30-571"]
  // 0.3 ["530-77","51-574","509-480","507-72","499-343","492-115","49-234","488-101","483-109","479-500","476-410","474-244","472-161","471-590","458-71","453-440","446-386","437-560","43-572","427-380","427-144","412-454","401-564","399-583","395-294","394-108","386-422","382-66","366-52","361-114","360-464","358-234","356-135","349-223","346-243","342-105","336-342","336-302","335-286","314-246"]
  // 0.4 ["114-539","141-36","158-413","169-245","182-514","186-260","209-352","241-557","247-204","303-10","350-120","354-437","357-319","358-467","36-289","361-248","365-439","366-185","372-498","375-521","376-325","383-163","388-109","398-144","401-14","415-115","421-431","43-188","441-482","452-320","456-251","464-269","468-200","47-37","475-213","483-259","493-268","493-66","512-407","519-335"]
  // 0.5 ["105-452","113-591","135-478","144-129","167-424","17-46","175-345","212-0","222-458","240-195","260-339","282-64","328-534","329-194","334-549","360-37","362-243","366-45","368-257","370-488","371-236","371-29","374-373","396-419","401-429","405-481","451-381","456-189","458-16","474-468","487-431","495-590","497-247","505-214","505-402","507-362","509-188","509-301","518-47","519-546"]
  // 1 ["154-136","188-592","198-194","220-14","222-533","235-233","287-41","308-96","314-200","314-417","316-466","316-560","320-54","322-256","332-92","372-284","386-517","405-332","441-568","445-358","447-367","475-254","475-88","497-191","498-387","501-201","507-157","51-406","525-479","534-361","567-117","577-92","585-131","604-313","612-127","628-171","634-22","638-344","642-104","644-255"]

  //Crossover
  // populiation 50
  // mutation 0.1
  // 0.1 ["111-391","115-417","116-178","122-88","124-494","147-264","15-314","151-287","157-592","158-490","159-255","16-379","172-89","177-244","194-297","208-61","210-427","215-11","218-547","220-396","221-331","232-19","239-89","255-67","264-72","298-36","303-592","312-535","322-459","340-372","342-562","358-112","364-278","373-186","393-89","408-419","410-456","435-2","438-256","456-45"]
  // 0.2 ["354-55","357-118","359-248","36-272","363-145","367-234","370-100","371-286","375-221","375-355","376-300","38-114","38-355","380-367","381-408","385-509","388-9","390-256","390-360","391-419","392-170","395-26","395-73","401-14","403-531","403-578","410-525","42-255","421-84","422-7","423-393","428-30","429-224","432-58","434-205","440-17","458-498","462-400","47-584","482-328"]
  // 0.3 ["565-29","558-492","555-484","554-34","553-202","544-510","540-84","536-475","527-459","512-14","508-473","503-37","490-211","478-372","477-375","476-392","460-229","445-209","418-564","417-392","416-492","409-477","409-364","396-110","390-205","388-344","387-404","372-121","369-129","363-210","350-544","345-466","344-450","340-564","326-527","326-472","313-470","300-306","3-527","103-418"]
  // 0.4 ["565-29","558-492","555-484","554-34","553-202","544-510","540-84","536-475","527-459","512-14","508-473","503-37","490-211","478-372","477-375","476-392","460-229","445-209","418-564","417-392","416-492","409-477","409-364","396-110","390-205","388-344","387-404","372-121","369-129","363-210","350-544","345-466","344-450","340-564","326-527","326-472","313-470","300-306","3-527","103-418"]
  // 0.5 ["291-44","287-407","273-572","268-8","267-11","264-518","252-431","249-216","247-274","245-344","244-226","242-169","241-378","24-182","24-125","238-431","235-520","224-461","222-278","22-130","215-88","214-396","211-25","208-556","204-257","185-280","184-507","18-302","172-586","168-208","167-424","165-351","161-491","160-357","160-218","16-59","143-239","137-507","132-50","13-86"]
  // 1 ["486-206","482-5","467-246","467-126","46-539","459-379","459-343","457-596","456-463","455-0","454-56","452-144","452-131","45-7","447-90","444-165","442-571","441-159","441-156","440-251","44-221","44-100","439-41","436-520","434-499","431-380","428-100","427-591","426-475","426-383","425-332","424-575","422-479","421-557","421-523","419-405","419-383","419-133","418-150","417-89"]

   // Net size
  // crossover 0.1
  // populiation 50
  // mutation 0.1
  // 10 ["153-441","214-185","231-401","239-278","269-66","300-397","327-458","338-464","341-145","368-210"]
  // 40 ["547-338","536-249","530-143","53-332","525-397","52-279","513-370","51-555","483-326","481-363","470-292","465-421","45-247","434-224","423-597","415-438","394-182","380-555","380-388","347-187","316-88","314-362","276-178","270-219","247-273","237-250","236-288","211-210","202-297","201-576","194-324","183-386","180-565","162-571","150-30","148-207","147-133","138-252","132-69","120-30"]
  // 100 ["95-515","94-22","8-449","798-185","790-531","767-11","766-591","766-116","759-111","75-532","737-245","735-246","726-186","724-163","715-51","698-552","693-559","692-257","683-26","681-499","670-159","642-466","64-41","628-207","622-567","619-330","615-539","611-421","607-544","606-262","600-54","594-585","585-70","585-311","579-92","553-283","546-228","545-223","543-37","519-395","507-70","498-41","496-336","487-453","484-64","474-189","472-52","464-259","463-227","450-522","447-531","447-312","438-95","438-286","402-294","400-228","397-398","396-525","392-310","387-87","379-320","373-72","373-524","360-290","336-305","334-43","321-381","313-560","300-465","3-366","289-578","285-597","285-24","283-574","283-309","280-432","278-594","275-76","251-89","243-92","243-67","23-73","215-482","215-472","207-270","204-564","204-179","200-389","200-275","19-248","179-442","174-281","167-570","155-161","148-181","13-344","126-135","12-512","104-387","102-473"]
  // 200 ["10-399","10-72","104-394","107-540","109-170","109-37","112-429","112-475","113-94","114-209","119-96","120-66","125-162","126-180","129-560","133-402","133-404","136-125","140-110","141-179","145-531","147-471","151-314","153-45","155-502","160-197","162-358","162-384","162-411","163-166","164-185","165-69","168-24","168-58","171-50","173-1","175-129","175-528","178-60","179-549","18-382","18-68","181-567","184-307","184-56","188-32","191-583","193-238","195-46","195-70","198-84","2-568","200-21","200-584","201-306","202-138","204-296","204-593","205-292","207-395","207-536","209-497","21-487","211-573","213-50","216-224","218-537","218-567","220-163","221-465","223-199","227-114","229-361","23-566","232-339","232-95","235-170","242-104","245-290","249-360","249-42","253-229","253-36","258-97","259-295","26-565","261-365","262-346","264-580","265-523","269-462","270-335","273-242","274-134","276-184","28-243","284-388","284-532","287-127","290-536","292-324","295-330","296-596","298-477","298-552","3-441","30-188","305-72","307-408","310-244","312-253","312-81","315-406","316-466","317-369","318-452","318-533","319-541","324-194","324-446","325-512","328-528","329-365","329-9","33-116","331-124","331-488","334-432","334-51","334-561","335-125","337-210","34-333","340-305","340-576","341-389","342-491","348-144","348-181","35-114","350-369","350-537","353-174","353-403","354-106","354-590","359-370","36-108","362-91","367-379","367-462","368-482","37-591","375-224","375-97","384-261","390-350","391-476","392-119","393-343","393-448","398-390","402-364","403-379","403-493","404-494","404-556","406-212","411-54","414-560","42-92","420-13","420-330","424-284","424-301","425-306","432-205","434-441","435-152","44-574","441-509","443-142","443-485","449-218","452-332","453-576","454-238","454-446","460-198","460-57","461-195","462-325","462-379","464-104","466-427","467-98","47-18","47-39","47-500","47-594"]
  // 500 ["0-21","1-10","1-485","103-164","103-306","104-252","105-275","105-73","106-559","106-75","106-78","107-123","107-589","109-378","109-462","109-543","11-170","110-559","111-135","112-142","114-139","114-201","115-336","116-153","116-17","116-191","116-460","117-496","119-185","12-205","12-468","122-122","122-176","122-454","125-24","125-53","128-335","13-304","13-596","130-11","130-435","131-154","132-19","133-510","134-154","134-420","135-10","136-191","139-231","139-236","14-179","14-220","14-281","14-314","141-571","142-201","142-461","144-207","144-242","144-297","147-557","147-566","148-285","148-297","149-584","152-101","152-11","152-472","154-428","154-62","155-299","155-373","155-447","156-327","156-547","159-118","16-203","16-208","16-229","160-333","160-83","161-169","164-120","164-240","164-413","165-356","165-450","165-5","165-554","166-164","168-411","168-448","168-520","168-94","169-232","169-526","17-487","170-36","170-587","171-16","171-246","173-377","173-582","174-203","175-503","178-419","178-523","179-128","18-320","180-167","180-222","180-97","181-309","181-63","183-35","183-96","185-417","185-83","186-538","186-572","188-113","188-234","189-109","189-242","189-290","19-201","190-0","190-53","193-80","195-446","196-223","196-334","196-40","198-483","200-159","200-218","202-268","203-126","203-185","203-352","204-225","205-152","205-433","205-550","206-32","207-50","208-470","21-479","210-5","212-512","215-188","215-347","215-515","222-256","223-568","225-15","226-29","226-462","227-266","228-211","229-103","229-552","23-413","230-429","231-237","232-500","234-375","235-276","235-518","237-31","237-561","238-441","238-594","239-308","239-326","239-329","24-280","24-370","240-200","241-136","241-227","242-32","243-556","244-435","244-561","246-198","246-395","246-574","247-153","249-270","249-321","249-59","25-54","250-360","250-420","251-362","252-280","253-537","254-151","254-195","255-36","258-166","259-227","26-61","261-243","261-266","261-518","261-74","262-27","264-154","264-276","264-67","265-221","265-340","266-598","267-538","268-532","269-274","270-79","271-127","271-375","271-63","274-341","274-65","275-368","276-544","277-61","278-293","279-205","28-150","28-439","280-65","281-151","281-244","281-309","281-353","282-550","284-261","287-366","287-89","288-16","288-512","288-554","288-590","288-89","289-336","291-179","291-349","292-387","292-451","293-87","294-211","294-489","294-54","295-180","295-61","296-498","296-578","298-446","299-371","3-254","30-105","300-33","300-572","301-225","302-443","302-496","303-217","305-480","306-304","306-329","307-542","310-301","312-421","312-555","313-39","313-474","314-587","315-443","315-578","317-5","318-418","32-12","32-14","32-152","32-64","320-407","320-443","321-133","321-175","321-407","321-70","322-468","323-326","323-582","324-225","325-30","326-56","327-415","328-114","33-185","33-360","331-360","332-509","333-364","333-415","333-597","334-28","334-311","335-195","335-410","335-559","339-222","339-526","340-411","340-53","341-326","342-326","343-190","343-30","343-37","343-489","344-390","345-135","345-454","345-473","345-527","346-111","346-169","346-186","346-200","346-340","346-368","347-100","347-519","348-117","348-80","35-150","350-138","350-393","350-418","351-554","352-120","352-48","352-596","353-506","354-283","354-435","355-231","355-445","356-217","356-492","357-204","357-298","358-558","358-85","359-389","36-403","360-279","360-41","362-261","362-323","362-345","362-409","362-7","363-282","363-315","363-496","364-12","364-424","366-243","366-47","367-315","368-337","368-412","37-286","37-350","371-326","371-68","372-133","373-524","374-210","377-112","377-184","377-78","379-196","379-394","379-560","38-283","38-543","380-20","380-262","381-207","381-528","381-580","382-268","382-293","383-229","385-168","385-76","387-598","387-89","39-163","390-329","390-586","390-90","391-471","392-2","392-395","393-195","394-4","395-116","395-118","395-408","395-439","396-548","397-371","397-413","398-139","398-555","399-26","399-274","399-496","399-574","399-588","4-399","400-17","401-298","402-227","403-229","403-30","403-520","404-427","405-507","405-66","408-382","409-438","41-152","41-390","41-42","41-495","410-2","410-377","410-523","411-477","413-550","414-180","415-586","416-383","416-406","417-506","418-107","418-292","418-485","418-82","42-323","42-440","42-567","421-112","421-32","421-505","423-505","424-242","424-80","425-34","425-520","426-181","426-558","427-497","429-131","429-253","429-517","430-154","430-528","430-547","431-1","431-83","432-276","434-16","434-473","435-192","435-218","435-570","436-250","437-440","438-200","439-485","44-160","440-268","441-404","441-494","442-91","443-223","446-189","447-527","448-191","449-402","449-408","449-595","45-125"]
  // 1000 ["0-154","0-310","0-444","1-507","10-60","101-168","102-0","104-146","104-187","104-247","104-341","105-16","105-573","108-259","108-316","108-564","108-582","109-106","109-249","109-418","109-433","109-452","11-246","110-373","111-13","111-289","112-493","115-197","116-226","117-184","119-260","119-437","12-179","12-369","121-433","121-502","122-42","122-593","122-80","123-117","123-190","123-203","124-159","125-475","125-541","125-569","126-343","127-107","127-6","129-134","129-64","13-363","131-254","131-3","132-296","132-439","135-305","135-598","136-549","14-440","140-538","141-559","142-361","144-379","144-78","145-108","145-176","146-196","146-74","150-595","151-340","152-98","154-141","154-393","154-492","155-426","156-355","158-218","158-230","158-594","158-68","159-275","16-352","16-359","16-465","161-383","162-56","163-409","164-292","164-479","164-54","165-277","165-328","165-40","166-98","168-270","169-185","169-546","17-532","170-277","170-29","170-48","171-484","172-369","172-380","172-447","173-182","173-392","174-209","174-463","174-57","174-577","175-430","176-270","176-364","176-61","177-505","179-187","179-302","179-376","18-341","180-282","180-452","184-226","184-528","185-112","185-159","186-372","187-178","187-349","187-391","188-391","189-10","19-453","190-416","191-341","191-356","191-519","193-538","196-566","198-39","199-57","2-130","2-177","2-227","200-178","200-399","202-372","203-172","203-323","204-322","206-460","207-304","207-523","208-287","209-280","209-537","21-326","21-377","21-543","210-13","210-63","211-335","211-447","212-200","212-352","213-217","213-219","214-231","214-551","215-456","215-529","218-270","218-50","218-534","218-568","219-126","219-460","221-147","221-169","221-554","222-567","222-593","223-359","224-402","225-228","225-86","226-125","226-302","229-195","23-557","23-64","230-270","230-593","232-170","233-293","235-231","236-522","239-269","24-327","241-378","241-72","242-322","242-430","243-273","25-292","25-294","252-204","255-57","257-524","257-579","257-77","258-341","26-289","26-487","261-187","261-85","262-519","262-550","262-91","263-166","263-587","263-597","264-538","265-542","266-46","266-9","267-139","269-198","269-215","269-387","269-555","269-77","27-25","27-455","270-481","271-299","271-427","272-46","274-104","274-386","275-11","277-177","277-59","277-66","278-573","28-234","28-595","280-100","280-360","281-429","281-597","283-499","283-50","283-586","285-361","286-80","287-439","287-440","287-493","288-245","288-283","289-504","29-324","29-78","292-370","293-138","293-152","294-144","294-484","295-230","295-360","296-514","298-10","30-141","30-366","300-269","301-152","301-176","301-416","301-475","303-178","303-430","303-8","306-256","306-424","307-515","308-112","308-401","309-438","31-294","31-550","310-160","310-169","312-188","313-117","313-507","314-435","316-367","316-94","317-281","317-587","318-389","319-369","32-320","32-500","32-527","320-471","320-517","321-4","321-502","322-195","322-375","322-377","322-521","323-228","324-209","324-386","325-233","326-251","327-161","327-35","328-290","328-423","329-30","329-592","33-256","33-272","33-395","33-537","330-8","331-393","331-587","332-452","333-1","333-114","333-152","333-183","333-302","333-418","334-11","334-179","334-218","334-376","334-504","334-537","334-86","334-96","335-3","335-539","336-436","336-72","337-216","337-62","338-182","338-250","338-27","338-31","338-425","338-61","339-144","339-18","339-306","339-585","34-202","34-269","34-326","34-385","34-415","340-178","340-182","340-421","340-597","341-382","341-542","341-550","342-226","342-58","342-73","342-84","343-0","343-398","343-467","344-17","344-227","344-330","344-45","344-463","345-206","345-207","345-501","345-75","345-83","346-143","346-163","347-164","347-369","347-491","348-268","348-400","349-115","349-12","349-239","349-54","349-81","35-442","35-515","35-555","35-591","350-251","350-354","350-435","350-564","350-74","351-115","351-227","351-377","351-405","352-150","352-199","352-435","352-532","353-157","353-340","353-373","353-597","354-147","354-389","354-524","354-84","355-121","355-186","355-19","355-75","356-394","356-492","357-495","358-146","358-185","358-23","358-51","358-539","359-286","359-313","36-145","36-364","360-306","360-365","360-437","360-455","361-117","361-569","361-592","362-226","362-292","362-571","363-190","363-49","364-551","365-196","365-215","365-407","365-8","366-315","366-40","367-168","367-33","367-467","367-79","368-531","368-536","368-66","369-377","369-542","369-597","37-239","37-297","37-583","37-81","370-0","370-108","371-123","371-176","371-30","371-40","371-567","372-452","372-96","373-100","373-359","373-386","373-534","374-109","374-311","374-510","375-166","375-436","375-579","376-148","376-223","376-368","377-103","377-257","377-562","378-105","378-183","378-263","378-348","378-373","379-510","38-145","380-279","381-104","381-178","381-257","381-329","381-464","382-0","382-146","382-261","382-401","382-424","382-445","382-595","383-143","383-266","383-345","383-352","383-354","383-567","384-197","384-443","385-120","385-235","385-522","386-576","387-122","387-203","387-243","387-288","388-281","388-399","388-58","388-61","389-395","389-405","389-522","39-415","39-573","390-190","390-211","390-236","390-350","390-45","390-6","392-182","392-295","392-302","392-372","392-442","392-47","392-487","392-49","393-188","393-338","393-355","393-371","393-493","393-589","394-202","394-425","394-457","394-579","394-82","395-410","395-477","395-526","395-591","396-368","397-172","397-260","398-486","398-99","399-133","399-196","399-386","399-394","399-514","399-534","399-548","399-573","4-274","4-311","4-547","4-85","40-105","40-454","40-518","400-169","400-216","400-443","400-54","400-549","400-579","400-581","400-593","400-64","401-306","401-455","401-504","401-531","401-585","402-558","403-0","403-102","403-292","403-426","404-272","404-301","406-274","406-285","406-306","406-555","407-228","407-289","407-434","407-474","407-68","407-92","408-541","409-311","409-324","409-365","409-408","409-472","409-483","409-514","41-146","41-315","41-345","41-365","41-40","41-424","41-462","41-497","410-519","410-559","411-285","411-334","411-503","412-327","412-465","412-524","413-129","413-20","413-245","414-284","414-394","414-528","414-77","415-112","415-218","415-272","415-284","415-477","415-532","416-355","417-17","417-171","417-30","417-54","417-593","418-132","418-296","418-42","418-420","418-424","418-452","418-547","418-594","419-201","419-226","42-103","42-176","42-197","42-209","42-250","42-470","420-336","420-452","421-103","421-163","421-462","422-7","423-108","423-148","423-200","423-359","423-504","423-587","424-150","424-555","427-114","427-155","427-207","427-470","427-480","427-552","427-589","428-257","428-268","428-359","428-378","428-384","429-186","429-25","429-270","429-322","429-33","429-387","429-80","429-83","43-241","43-506","43-538","43-595","430-107","430-344","430-374","430-93","431-144","432-282","432-328","432-333","432-424","432-537","433-486","433-581","434-199","434-284","434-299","435-124","435-317","435-390","435-446","435-581","435-91","436-415","437-102","437-23","437-275","438-13","438-159","438-302","438-362","438-490","438-516","438-518","438-78","439-140","439-249","44-419","440-13","440-16","440-262","440-566","441-12","441-230","441-402","441-451","441-65","442-199","442-33","443-105","443-573","443-74","443-95","444-23","444-295","445-141","445-479","445-559","446-292","446-398","446-408","446-446","446-515","447-590","448-166","448-562","449-191","449-391","449-422","45-183","45-374","45-38","45-389","45-520","45-589","450-324","451-370","451-561","452-473","452-534","453-234","453-346","453-395","453-462","453-469","454-128","454-341","454-400","454-582","455-171","455-316","456-218","456-267","456-327","456-451","456-57","457-439","457-482","457-501","457-531","458-117","458-158","458-282","458-511","458-551","458-75","459-363","459-92","46-120","46-251","460-160","461-104","461-149","461-27","461-32","461-420","461-442","461-478","461-506","461-538","461-58","461-69","462-512","462-68","463-146","464-487","466-13","466-24","466-421","466-536","466-565","467-1","468-27","468-33","468-55","47-407","470-436","470-509","471-135","472-453","472-9","473-438","474-248","474-374","474-42","476-184","476-496","478-366","478-542","479-480","48-398","48-537","48-568","480-81","481-160","481-453","481-581","483-87","484-280","484-449","484-583","485-318","485-526","486-282","488-211","49-357","490-461","491-391","492-222","492-77","493-29","493-310","493-67","494-426","495-261","495-485","497-112","498-270","499-388","5-289","50-282","50-30","500-120","501-253","502-225","505-360","506-334","506-570","507-254","508-234","508-355","509-363","509-89","51-312","51-434","510-525","512-128","512-580","513-96","516-205","516-330","517-272","517-83","518-596","518-60","52-9","520-14","520-162","521-434","524-11","524-139","524-281","524-88","525-163","525-546","527-34","527-383","53-161","53-540","53-86","530-141","531-107","531-128","531-141","532-444","533-245","533-6","535-295","535-420","536-161","537-58","537-583","54-392","542-415","542-567","544-16","545-242","545-86","546-578","546-584","547-461","548-519","55-100","550-227","551-368","552-114","553-10","553-197","554-261","555-391","556-582","558-216","558-28","558-320","558-53","561-53","565-68","567-552","57-85","571-438","571-568","571-58","572-432","574-107","575-3","575-511","575-85","576-213","576-300","577-119","578-394","579-125","579-544","579-552","58-132"]


  // Stabdymo salygos iteraciju skaicius
  // crossover 0.1
  // populiation 50
  // mutation 0.1
  // net size
  // 10 ["317-288","325-571","332-387","335-503","336-413","339-574","341-268","343-239","348-69","351-65","355-323","356-421","369-69","38-288","386-572","390-281","393-307","416-518","433-119","474-52","481-556","514-218","537-354","539-153","554-89","565-209","565-536","585-28","613-290","619-237","626-337","629-18","630-238","638-589","645-246","722-293","732-405","765-234","767-338","79-245"]
  // 40 ["2-461","202-188","241-275","374-524","376-90","377-417","378-455","387-85","387-99","389-568","392-435","394-118","395-567","395-73","4-489","403-181","403-214","403-552","405-355","406-540","408-63","413-30","419-127","429-270","435-483","440-460","442-421","444-318","447-38","449-486","450-227","452-161","456-270","457-204","46-457","461-419","462-83","464-132","468-284","468-550"]
  // 100 ["625-168","618-60","606-595","591-271","588-462","585-239","582-573","562-204","562-201","561-24","56-497","56-243","550-240","548-44","544-29","539-123","525-411","520-469","517-516","507-172","50-382","499-7","499-31","494-381","489-429","488-476","484-489","484-299","474-207","471-198","455-203","454-44","441-499","44-186","437-42","433-301","430-38","205-260","164-345","147-536"]
  // 200 ["492-257","49-547","483-88","483-510","477-287","476-591","473-458","473-404","473-116","469-374","469-211","464-268","462-519","460-534","459-230","455-216","454-462","450-188","446-140","444-234","443-94","442-133","44-21","439-383","433-182","43-290","428-129","426-584","425-292","420-447","419-252","416-516","415-309","412-436","406-445","404-325","403-512","402-549","4-349","261-35"]
  // 500 ["596-255","590-287","590-17","580-535","579-266","579-231","578-599","578-249","576-457","57-309","567-393","562-557","560-518","560-433","56-416","552-43","552-394","548-499","545-344","544-96","543-490","541-39","541-291","54-206","539-517","526-594","522-39","52-210","519-397","518-183","516-507","515-50","513-178","512-490","509-69","508-272","501-417","5-174","498-570","498-243"]
  // 1000 ["191-211","210-599","212-500","215-120","219-432","22-194","228-73","229-394","23-71","231-540","232-150","235-116","240-263","240-34","241-455","241-78","25-145","25-186","25-467","250-256","252-267","254-599","260-217","267-404","270-181","271-332","271-484","272-471","273-236","273-250","274-312","274-587","275-207","277-119","277-472","278-406","279-15","279-253","279-75","282-481"]

  private void calculatePrecision(String selfName, String othersName) {
    ArrayList<Double> selfNorms = this.fileService.readDistanceFromFile(selfName);
    ArrayList<Double> othersNorms = this.fileService.readDistanceFromFile(othersName);

    System.out.println(selfNorms.size());
    System.out.println(othersNorms.size());

    int selfSize = selfNorms.size();
    int othersSize = othersNorms.size();


    Double selftPercentage;
    Double otherPercentage;

    int indexSelf = 0;
    int indexOthers = 0;

    for (int i = 0; i < selfSize; i++) {
      for (int j = 0; j < othersSize; j++) {
        Double a = selfNorms.get(i);
        Double b = othersNorms.get(j);
        if ( Double.compare(a, b) > 0 ) {
          indexSelf = i;
          indexOthers++;
        }
      }

      selftPercentage = (double) indexSelf / selfSize * 100;
      otherPercentage = (double) (othersSize - indexOthers) / othersSize * 100;

      double result = selftPercentage - otherPercentage;
      indexOthers = 0;

      if (result > 0 && result < 4.0) {
        System.out.println(selftPercentage + " % " + otherPercentage);
        System.out.println(selfNorms.get(i));
        break;
      }
    }
  }

  private void storeDistance(String netName) {
    String path = "src/main/resources/database";

    ArrayList<Double> selfNorms = new ArrayList<>();
    ArrayList<Double> othersNorms = new ArrayList<>();

    try {
      File[] personDirectories = new File(path).listFiles();

      for (File directory1: personDirectories) {

        for (File directory2: personDirectories) {

          String directoryName1 = directory1.getName();
          String directoryName2 = directory2.getName();

          if (!directoryName1.equalsIgnoreCase(".DS_Store") && !directoryName2.equalsIgnoreCase(".DS_Store")) {
            File[] personPhotos1 = new File(path + "/" + directoryName1 + "/" + netName).listFiles();
            File[] personPhotos2 = new File(path + "/" + directoryName2 + "/" + netName).listFiles();

            for (File photo1: personPhotos1) {
              for (File photo2: personPhotos2) {
                if (!photo1.getName().equalsIgnoreCase(".DS_Store") && !photo2.getName().equalsIgnoreCase(".DS_Store")) {

                  Mat comparatorVector = Highgui.imread(photo1.getPath().toString());
                  Mat vectorToCompare = Highgui.imread(photo2.getPath().toString());
                  Double norm = Core.norm(vectorToCompare, comparatorVector, Core.NORM_L2);
                  System.out.println(photo1.getPath().toString() + " " + photo2.getPath().toString() + " " + norm);
                  if (directoryName1.equalsIgnoreCase(directoryName2)) {
                    selfNorms.add(norm);
                  } else {
                    othersNorms.add(norm);
                  }
                }
              }
            }
          }

        }
      }

      Collections.sort(selfNorms);
      Collections.sort(othersNorms);

      this.fileService.storeDistanceInFile(selfNorms, netName + "-self-distance.txt");
      this.fileService.storeDistanceInFile(othersNorms, netName + "-others-distance.txt");

      System.out.println(selfNorms.size());
      System.out.println(othersNorms.size());

    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }

  private void storeNet(ArrayList<String> net, String vectorFolderName) {
    String path = "src/main/resources/database";
    for (int i = 1; i <= CONFIG.NUMBER_OF_PERSONS; i++) {
      String person = "p" + i;

      new File("src/main/resources/database/" + person + "/" + vectorFolderName).mkdir();
    }
    try {

      File[] personDirectories = new File(path).listFiles();


      for (File directory: personDirectories) {

        String directoryName = directory.getName();

        if (!directoryName.equalsIgnoreCase(".DS_Store")) {
          File[] personPhotos = new File(path + "/" + directoryName + "/resized").listFiles();

          for (File photo: personPhotos) {
            if (!photo.getName().equalsIgnoreCase(".DS_Store")) {
              Mat image = Highgui.imread(photo.getPath().toString());
              System.out.println(photo.getPath().toString());
              Mat vector = new Mat(1, net.size() - 1, CvType.CV_8UC1);
              int i = 0;
              for (String coordinatesString : net) {
                String[] coordinates = coordinatesString.split("-");
                int x = Integer.valueOf(coordinates[0]);
                int y = Integer.valueOf(coordinates[1]);

                double[] value = image.get(x, y);
                System.out.println(x + " " + y);
                System.out.println(i + " " + value[0]);
                vector.put(0, i, value[0]);
                i++;
              }

              String vectorPath = photo.getPath().toString().replaceAll("resized", vectorFolderName);

              System.out.println(vectorPath);

              Highgui.imwrite( vectorPath, vector);
            }
          }
        }

      }

    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }
}
